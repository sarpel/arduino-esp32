name: CI Build and Test

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install PlatformIO
      run: pip install -U platformio
    
    - name: Build ESP32 firmware
      run: platformio run
    
    - name: Run unit tests
      run: platformio test -e test_unit
      continue-on-error: true
    
    - name: Run integration tests
      run: platformio test -e test_integration
      continue-on-error: true
    
    - name: Run static analysis
      run: platformio check
      continue-on-error: true
    
    - name: Generate firmware artifact
      uses: actions/upload-artifact@v3
      with:
        name: firmware
        path: .pio/build/*/firmware.bin

  code-quality:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        pip install pylint cppcheck
    
    - name: Run Cppcheck
      run: cppcheck --enable=all --suppress=missingIncludeSystem src/
      continue-on-error: true
    
    - name: Check code formatting
      run: find src -name "*.cpp" -o -name "*.h" | xargs clang-format --dry-run --Werror
      continue-on-error: true

  memory-check:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install PlatformIO
      run: pip install -U platformio
    
    - name: Build and check memory usage
      run: |
        platformio run --environment esp32-dev
        python3 scripts/memory_check.py
      continue-on-error: true

  security-scan:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Run security checks
      run: |
        pip install bandit
        find src -name "*.cpp" -o -name "*.h" | xargs bandit
      continue-on-error: true

  notify:
    runs-on: ubuntu-latest
    needs: [build, code-quality, memory-check]
    if: always()
    
    steps:
    - name: Notify build completion
      run: echo "CI pipeline completed"
